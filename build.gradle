plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
}

repositories {
	maven {
		url = 'https://jitpack.io'
	}
	maven {
		name = "Ladysnake Mods"
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Needed for the command API
	Object baseAPI = fabricApi.module("fabric-api-base", project.fabric_version);
	modImplementation baseAPI
	include baseAPI

	// Needed for the command
	Object commandAPI = fabricApi.module("fabric-command-api-v1", project.fabric_version);
	modImplementation commandAPI
	include commandAPI

	// Disabled while I figure out how to use cca
	/*
	// Replace modImplementation with modApi if you expose components in your own API
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-scoreboard:${project.cca_version}"
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-level:${project.cca_version}"
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:${project.cca_version}"

	// Includes Cardinal Components API as a Jar-in-Jar dependency (optional but recommended)
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-scoreboard:${project.cca_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-level:${project.cca_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:${project.cca_version}"
	*/
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// Select the repositories you want to publish to
	// To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
	repositories {
		// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	}
}